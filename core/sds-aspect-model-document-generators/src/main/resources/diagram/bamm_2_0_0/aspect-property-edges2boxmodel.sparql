# Copyright (c) 2021 Robert Bosch Manufacturing Solutions GmbH
#
# See the AUTHORS file(s) distributed with this work for additional
# information regarding authorship.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# SPDX-License-Identifier: MPL-2.0

prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:2.0.0#>
prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:2.0.0#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix : <urn:bamm:io.openmanufacturing:meta-model:2.0.0/boxmodel#>

# Generates edges between Aspects or Entities or Abstract Entities and Properties
construct {
  ?edge a :Edge .
  ?edge :title ?title .
  ?edge :from ?from .
  ?edge :to ?to .
} where {
  # Aspect/Entity/Abstract Entity -> Property Edges (properties)
  ?aspectOrEntityOrAbstractEntity rdf:type ?class .
  filter( ?class in ( bamm:Aspect, bamm:Entity, bamm:AbstractEntity ) )

  bind( strafter( str( ?aspectOrEntityOrAbstractEntity ), "#" ) as ?aspectOrEntityOrAbstractEntityName ) .

  ?property rdf:type ?propertyClass .
  filter( ?propertyClass in ( bamm:Property, bamm:AbstractProperty ) )

  bind( strafter( str( ?property ), "#" ) as ?propertyName ) .
  filter( exists { ?aspectOrEntityOrAbstractEntity bamm:properties/rdf:rest*/rdf:first/bamm:property? ?property } )

  bind( str( ?class ) as ?fullClassName )
  bind( strafter( ?fullClassName, "#" ) as ?typeName )
  bind( concat( ?aspectOrEntityOrAbstractEntityName, ?typeName ) as ?aspectOrEntityOrAbstractEntityBoxName )
  bind( iri( concat( str( : ), ?aspectOrEntityOrAbstractEntityBoxName ) ) as ?from )

  bind( if( exists { ?property a bamm:AbstractProperty }, "AbstractProperty", "Property" ) as ?propertyClassName )
  bind( concat( ?propertyName, ?propertyClassName ) as ?propertyBoxName )
  bind( iri( concat( str( : ), ?propertyBoxName ) ) as ?to )

  bind( iri( concat( str( : ), ?aspectOrEntityOrAbstractEntityBoxName, "_To_", ?propertyBoxName ) ) as ?edge )

  optional {
    ?aspectOrEntityOrAbstractEntity bamm:properties/rdf:rest*/rdf:first ?propertyNode .
    ?propertyNode bamm:property ?property .
    ?propertyNode bamm:optional true .
    ?propertyNode bamm:payloadName ?payloadName
    bind( concat( "property (optional) (", str( ?payloadName ), ")" ) as ?title )
  }

  optional {
    ?aspectOrEntityOrAbstractEntity bamm:properties/rdf:rest*/rdf:first ?propertyNode .
    ?propertyNode bamm:property ?property .
    ?propertyNode bamm:optional true .
    bind( "property (optional)" as ?title )
  }

  optional {
    ?aspectOrEntityOrAbstractEntity bamm:properties/rdf:rest*/rdf:first ?propertyNode .
    ?propertyNode bamm:property ?property .
    ?propertyNode bamm:notInPayload true .
    bind( "property (not in payload)" as ?title )
  }

  optional {
    ?aspectOrEntityOrAbstractEntity bamm:properties/rdf:rest*/rdf:first ?propertyNode .
    ?propertyNode bamm:property ?property .
    ?propertyNode bamm:payloadName ?payloadName
    bind( concat( "property (", str( ?payloadName ), ")" ) as ?title )
  }

  optional {
     ?aspectOrEntityOrAbstractEntity bamm:properties/rdf:rest*/rdf:first ?propertyNode .
     bind( "property" as ?title )
  }
}
