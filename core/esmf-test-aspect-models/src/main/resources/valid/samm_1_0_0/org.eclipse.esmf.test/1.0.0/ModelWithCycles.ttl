# Copyright (c) 2022 Robert Bosch Manufacturing Solutions GmbH
#
# See the AUTHORS file(s) distributed with this work for additional
# information regarding authorship.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# SPDX-License-Identifier: MPL-2.0

@prefix : <urn:samm:org.eclipse.esmf.test:1.0.0#> .
@prefix samm: <urn:samm:org.eclipse.esmf.samm:meta-model:1.0.0#> .
@prefix samm-c: <urn:samm:org.eclipse.esmf.samm:characteristic:1.0.0#> .
@prefix samm-e: <urn:samm:org.eclipse.esmf.samm:entity:1.0.0#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ModelWithCycles a samm:Aspect ;
   samm:name "ModelWithCycles" ;
   samm:properties ( :a :e :h :l :n [ samm:property :p ; samm:optional true ; ] ) ;
   samm:operations ( ) .

#####################################
# direct cycle between two properties
#####################################
:a a samm:Property;
   samm:name "a" ;
   samm:characteristic :aCharacteristic.

:aCharacteristic a samm:Characteristic;
   samm:name "aCharacteristic" ;
   samm:dataType :AEntity.

:AEntity a samm:Entity;
    samm:name "AEntity" ;
    samm:properties ( :b ) .

:b a samm:Property;
   samm:name "b" ;
   samm:characteristic :bCharacteristic.

:bCharacteristic a samm:Characteristic;
   samm:name "bCharacteristic" ;
   samm:dataType :BEntity.

:BEntity a samm:Entity;
   samm:name "BEntity" ;
   samm:properties ( :a ) .

#############################################
# indirect cycle via an intermediate property
#############################################
:e a samm:Property;
   samm:name "e" ;
   samm:characteristic :eCharacteristic.

:eCharacteristic a samm:Characteristic;
   samm:name "eCharacteristic" ;
   samm:dataType :EEntity.

:EEntity a samm:Entity;
   samm:name "EEntity" ;
   samm:properties ( :f ) .

:f a samm:Property;
   samm:name "f" ;
   samm:characteristic :fCharacteristic.

:fCharacteristic a samm:Characteristic;
   samm:name "fCharacteristic" ;
   samm:dataType :FEntity.

:FEntity a samm:Entity;
    samm:name "FEntity" ;
    samm:properties ( :g ) .

:g a samm:Property;
   samm:name "g" ;
   samm:characteristic :gCharacteristic.

:gCharacteristic a samm:Characteristic;
   samm:name "gCharacteristic" ;
   samm:dataType :GEntity.

:GEntity a samm:Entity;
    samm:name "GEntity" ;
    samm:properties ( :e ) .

##############################################
# cycle via both branches of samm-c:Either
##############################################
:h a samm:Property;
   samm:name "h" ;
   samm:characteristic :hCharacteristic.

:hCharacteristic a samm-c:Either;
    samm:name "hCharacteristic" ;
    samm-c:left :leftCharacteristic ;
    samm-c:right :rightCharacteristic.

:leftCharacteristic a samm:Characteristic;
   samm:name "leftCharacteristic" ;
   samm:dataType :LeftEntity.

:rightCharacteristic a samm:Characteristic;
   samm:name "rightCharacteristic" ;
   samm:dataType :RightEntity.

:LeftEntity a samm:Entity;
    samm:name "LeftEntity" ;
    samm:properties ( :h ) . # direct cycle

:RightEntity a samm:Entity;
    samm:name "RightEntity" ;
    samm:properties ( :i ) . # cycle via an intermediary property

:i a samm:Property;
   samm:name "i" ;
   samm:characteristic :iCharacteristic.

:iCharacteristic a samm:Characteristic;
   samm:name "iCharacteristic" ;
   samm:dataType :IEntity.

:IEntity a samm:Entity;
    samm:name "IEntity" ;
    samm:properties ( :h ) .

#############################################
# cycle via samm-c:baseCharacteristic
#############################################
:l a samm:Property;
   samm:name "l" ;
   samm:characteristic :lCharacteristic .

:lCharacteristic a samm-c:Trait;
   samm:name "lCharacteristic" ;
   samm-c:baseCharacteristic :MEntityList ;
   samm-c:constraint [
      a samm-c:LengthConstraint ;
      samm-c:maxValue "10"^^xsd:nonNegativeInteger ;
   ] .

:MEntityList a samm-c:List ;
   samm:name "MEntityList" ;
   samm:dataType :MEntity .

:MEntity a samm:Entity;
    samm:name "MEntity" ;
    samm:properties ( :l ) .

####################################################
# cycle via samm-e:TimeSeriesEntity and samm:extends
####################################################
:n a samm:Property ;
   samm:name "n" ;
   samm:characteristic :NTimeSeries .

:NTimeSeries a samm-c:TimeSeries ;
   samm:name "NTimeSeries" ;
   samm:dataType :NTimeSeriesEntity .

:NTimeSeriesEntity samm:refines samm-e:TimeSeriesEntity ;
   samm:name "NTimeSeriesEntity" ;
   samm:properties ( :refinedValue ) .

:refinedValue samm:refines samm-e:value ;
   samm:name "refinedValue" ;
   samm:characteristic :oCharacteristic .

:oCharacteristic a samm:Characteristic;
   samm:name "mCharacteristic" ;
   samm:dataType :OEntity.

:OEntity a samm:Entity;
    samm:name "OEntity" ;
    samm:properties ( :n ) .

######################################################
# optional property *before* a cycle does not break it
######################################################
:p a samm:Property ;
   samm:name "p" ;
   samm:characteristic :pCharacteristic .

:pCharacteristic a samm:Characteristic;
   samm:name "pCharacteristic" ;
   samm:dataType :PEntity.

:PEntity a samm:Entity;
    samm:name "PEntity" ;
    samm:properties ( :q ) .

:q a samm:Property ;
   samm:name "q" ;
   samm:characteristic :qCharacteristic .

:qCharacteristic a samm:Characteristic;
   samm:name "qCharacteristic" ;
   samm:dataType :QEntity.

:QEntity a samm:Entity;
    samm:name "QEntity" ;
    samm:properties ( :r ) .

:r a samm:Property ;
   samm:name "rEntity" ;
   samm:characteristic :rCharacteristic .

:rCharacteristic a samm:Characteristic;
   samm:name "rCharacteristic" ;
   samm:dataType :REntity.

:REntity a samm:Entity;
   samm:name "REntity" ;
   samm:properties ( :q ) .






